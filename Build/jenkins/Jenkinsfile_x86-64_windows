#!groovy
pipeline {
    agent {label 'windows&&x64&&test'}
    environment {
        JCL_VERSION='current'        
        JAVA_VERSION='SE80'
        SPEC='linux_x86-64'
    }
    stages {
        stage('Setup') {
            steps {
				timestamps{
					sh 'printenv'
					script {
                		if (fileExists('openjdkbinary')) {
                			dir('openjdkbinary') {
                				deleteDir()
                			}
                		}
                		if (fileExists('jvmtest')) {
                			dir('jvmtest') {
                				deleteDir()
                			}
                		}
                	}
                	withEnv(["OPENJDK_TEST=${WORKSPACE}/openjdk-test"]) {
	                	sh 'chmod 755 $OPENJDK_TEST/get.sh'
						sh '$OPENJDK_TEST/get.sh $WORKSPACE $OPENJDK_TEST'
					}
                }
            }
        }
        stage('Build') {
            steps {
				timestamps{
                	echo 'Building tests...'
                 	withEnv(["OPENJDK_TEST=${WORKSPACE}/openjdk-test", "JAVA_BIN=${WORKSPACE}/openjdkbinary/j2sdk-image/jre/bin"]) {
	                	sh 'chmod 755 $OPENJDK_TEST/maketest.sh'
						sh '$OPENJDK_TEST/maketest.sh $OPENJDK_TEST'
					}
				}
            }
        }
        stage('Test') {
            steps {
				timestamps{
                	echo 'Running tests...'
                	withEnv(["OPENJDK_TEST=${WORKSPACE}/openjdk-test", "JAVA_BIN=${WORKSPACE}/openjdkbinary/j2sdk-image/jre/bin"]) {
	                	sh "$OPENJDK_TEST/maketest.sh $OPENJDK_TEST runtest"
	                }
	            }
            }
        }
        stage('Deploy') {
            steps {
				timestamps {
                	echo 'Deploying....'
                	step([$class: "TapPublisher", testResults: "**/*.tap"])
                	archiveArtifacts artifacts: '**/*.tap', fingerprint: true
				}
            }
        }
    }
    post {
 		success {
 			deleteDir()
 		}
 	}
    
}
